@startuml

interface "Radio Browser API" as RadioBrowserAPI
interface "Radio Stream" as RadioStream #back:black;line:black
interface "Sound out" as out #back:black;line:black
interface "Operator input" as opin #back:black;line:black

component Controller #back:gold;line:black

package network #lightgrey {
    component NetworkUtils
    component RadioBrowser

    RadioBrowser -left-> NetworkUtils
    NetworkUtils <.[#black]right. RadioBrowser : query
    NetworkUtils .[#black]right.> RadioBrowser : string\n(raw data)
}

RadioBrowserAPI )-- NetworkUtils : http/s

package parser #lightgrey {
    component JSON
}

RadioBrowser -->              JSON
RadioBrowser .[#black]down.>  JSON : string\n(raw data)
JSON         .[#black]up..>    RadioBrowser : DTO(s)

package player #lightgrey {
    component RadioPlayer
    component Player
    component AudioOutput
    interface "Player interface" as iPlayer
    interface "AudioOut interface" as iAudioOut

    iPlayer     -up-    Player
    iAudioOut   --      AudioOutput
    RadioPlayer -up-(   iPlayer
    RadioPlayer -down-( iAudioOut
    Player .[#black].> AudioOutput : PCM data
}

opin .[#black]down.> Controller
Controller -down-> RadioBrowser
Controller -down-> RadioPlayer


[RadioBrowser] .[#black]right.> [RadioPlayer] : DTO(s)\n(radio station)


RadioStream .[#black].> Player
AudioOutput .[#black].> out



'note top of RadioBrowser : Gets a radio station's info
'note top of NetworkUtils : Network related\nfunctionality
'note bottom of JSON : Parses JSON data from\nraw string and packs into\nthe appropriate DTO(s)

@enduml