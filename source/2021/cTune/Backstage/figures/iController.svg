<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="547px" preserveAspectRatio="none" style="width:741px;height:547px;background:#FFFFFF;" version="1.1" viewBox="0 0 741 547" width="741px" zoomAndPan="magnify"><defs><filter height="300%" id="f2kmjtsr9j5s6" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[1d7ba1c7002d54515419844fbd155368]
class Controller--><rect codeLine="3" fill="#FEFECE" filter="url(#f2kmjtsr9j5s6)" height="526.5547" id="Controller" style="stroke:#A80036;stroke-width:1.5;" width="720" x="7" y="7"/><ellipse cx="333.75" cy="23" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M330.1719,18.7813 L330.1719,16.5 L337.5625,16.5 L337.5625,18.7813 L335.0938,18.7813 L335.0938,27.2344 L337.5625,27.2344 L337.5625,29.5 L330.1719,29.5 L330.1719,27.2344 L332.6406,27.2344 L332.6406,18.7813 L330.1719,18.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="58" x="354.25" y="27.1543">Controller</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="726" y1="39" y2="39"/><ellipse cx="18" cy="50" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="93" x="27" y="53.2104">init( void ) : bool</text><ellipse cx="18" cy="62.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="187" x="27" y="66.0151">load( ArgOptions_t * opts ) : void</text><ellipse cx="18" cy="75.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="27" y="78.8198">free( void ) : void</text><line style="stroke:#A80036;stroke-width:1.0;" x1="8" x2="726" y1="85.4141" y2="85.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacing" textLength="55" x="13" y="99.6245">Playback</text><line style="stroke:#A80036;stroke-width:1.0;" x1="8" x2="726" y1="106.2188" y2="106.2188"/><ellipse cx="18" cy="117.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="227" x="27" y="120.4292">playback.getPlaybackState( void ) : bool</text><ellipse cx="18" cy="130.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="27" y="133.2339">playback.start( const RadioStationInfo_t * station ) : bool</text><ellipse cx="18" cy="142.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="27" y="146.0386">playback.stop( void ) : void</text><ellipse cx="18" cy="155.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="234" x="27" y="158.8433">playback.modifyVolume( int delta ) : void</text><ellipse cx="18" cy="168.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="444" x="27" y="171.6479">playback.testStream( const char * url, String_t * codec, ulong * bitrate ) : bool</text><ellipse cx="18" cy="181.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="27" y="184.4526">playback.validateURL( const char * url ) : bool</text><line style="stroke:#A80036;stroke-width:1.0;" x1="8" x2="726" y1="191.0469" y2="191.0469"/><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacing" textLength="42" x="13" y="205.2573">Search</text><line style="stroke:#A80036;stroke-width:1.0;" x1="8" x2="726" y1="211.8516" y2="211.8516"/><ellipse cx="18" cy="222.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="427" x="27" y="226.062">search.getStations( RadioBrowserFilter_t * filter, Vector_t * stations ) : bool</text><ellipse cx="18" cy="235.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="605" x="27" y="238.8667">search.getStationsBy( const ByCategory_e category, const char * search_term, Vector_t * stations ) : bool</text><ellipse cx="18" cy="248.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="694" x="27" y="251.6714">search.getCategoryItems( const ListCategory_e category, const RadioBrowserFilter_t * filter, Vector_t * categories ) : bool</text><line style="stroke:#A80036;stroke-width:1.0;" x1="8" x2="726" y1="258.2656" y2="258.2656"/><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacing" textLength="52" x="13" y="272.4761">Settings</text><line style="stroke:#A80036;stroke-width:1.0;" x1="8" x2="726" y1="279.0703" y2="279.0703"/><ellipse cx="18" cy="290.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="390" x="27" y="293.2808">cfg.toggleFavourite( RadioStationInfo_t * rsi, StationSrc_e src ) : bool</text><ellipse cx="18" cy="302.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="394" x="27" y="306.0854">cfg.updateFavourite( RadioStationInfo_t * rsi, StationSrc_e src ) : bool</text><ellipse cx="18" cy="315.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="398" x="27" y="318.8901">cfg.isFavourite( const RadioStationInfo_t * rsi, StationSrc_e src ) : bool</text><ellipse cx="18" cy="328.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="27" y="331.6948">cfg.isFavouriteUUID( const char * uuid, StationSrc_e src ) : bool</text><ellipse cx="18" cy="341.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="27" y="344.4995">cfg.saveFavourites( void ) : bool</text><ellipse cx="18" cy="354.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="287" x="27" y="357.3042">cfg.getListOfFavourites( Vector_t * stations ) : bool</text><ellipse cx="18" cy="366.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="356" x="27" y="370.1089">cfg.setFavouriteSorting( RadioStationInfo_SortBy_e attr ) : void</text><ellipse cx="18" cy="379.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="27" y="382.9136">cfg.getUiTheme( void ) : struct ColourTheme</text><ellipse cx="18" cy="392.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="214" x="27" y="395.7183">cfg.favTabThemingState( void ) : bool</text><ellipse cx="18" cy="405.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="215" x="27" y="408.5229">cfg.largeRowsForFavTab( void ) : bool</text><ellipse cx="18" cy="418.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="234" x="27" y="421.3276">cfg.largeRowsForSearchTab( void ) : bool</text><ellipse cx="18" cy="430.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="242" x="27" y="434.1323">cfg.largeRowsForBrowserTab( void ) : bool</text><line style="stroke:#A80036;stroke-width:1.0;" x1="8" x2="726" y1="440.7266" y2="440.7266"/><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacing" textLength="91" x="13" y="454.937">Callback setup</text><line style="stroke:#A80036;stroke-width:1.0;" x1="8" x2="726" y1="461.5313" y2="461.5313"/><ellipse cx="18" cy="472.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="319" x="27" y="475.7417">setVolumeChangeEventCallback( void(* cb)( int ) ) : void</text><ellipse cx="18" cy="485.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="27" y="488.5464">setSongChangeEventCallback( void(* cb)( const char *) ) : void</text><ellipse cx="18" cy="498.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="465" x="27" y="501.3511">setStationChangeEventCallback( void(* cb)( const RadioStationInfo_t * rsi ) ) : void</text><ellipse cx="18" cy="510.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="365" x="27" y="514.1558">setPlaybackStateChangeEventCallback( void(* cb)( bool ) ) : void</text><ellipse cx="18" cy="523.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="354" x="27" y="526.9604">setSearchStateChangeEventCallback( void(* cb)( bool ) ) : void</text><!--MD5=[ef17fe02a0f0681aff57fd4392279b6f]
@startuml
'https://plantuml.com/class-diagram

interface Controller {
    + init( void ) : bool
    + load( ArgOptions_t * opts ) : void
    + free( void ) : void
    - - - -
    <b>Playback</b>
    - - - -
    + playback.getPlaybackState( void ) : bool
    + playback.start( const RadioStationInfo_t * station ) : bool
    + playback.stop( void ) : void
    + playback.modifyVolume( int delta ) : void
    + playback.testStream( const char * url, String_t * codec, ulong * bitrate ) : bool
    + playback.validateURL( const char * url ) : bool
    - - - -
    <b>Search</b>
    - - - -
    + search.getStations( RadioBrowserFilter_t * filter, Vector_t * stations ) : bool
    + search.getStationsBy( const ByCategory_e category, const char * search_term, Vector_t * stations ) : bool
    + search.getCategoryItems( const ListCategory_e category, const RadioBrowserFilter_t * filter, Vector_t * categories ) : bool
    - - - -
    <b>Settings</b>
    - - - -
    + cfg.toggleFavourite( RadioStationInfo_t * rsi, StationSrc_e src ) : bool
    + cfg.updateFavourite( RadioStationInfo_t * rsi, StationSrc_e src ) : bool
    + cfg.isFavourite( const RadioStationInfo_t * rsi, StationSrc_e src ) : bool
    + cfg.isFavouriteUUID( const char * uuid, StationSrc_e src ) : bool
    + cfg.saveFavourites( void ) : bool
    + cfg.getListOfFavourites( Vector_t * stations ) : bool
    + cfg.setFavouriteSorting( RadioStationInfo_SortBy_e attr ) : void
    + cfg.getUiTheme( void ) : struct ColourTheme
    + cfg.favTabThemingState( void ) : bool
    + cfg.largeRowsForFavTab( void ) : bool
    + cfg.largeRowsForSearchTab( void ) : bool
    + cfg.largeRowsForBrowserTab( void ) : bool
    - - - -
    <b>Callback setup</b>
    - - - -
    + setVolumeChangeEventCallback( void(* cb)( int ) ) : void
    + setSongChangeEventCallback( void(* cb)( const char *) ) : void
    + setStationChangeEventCallback( void(* cb)( const RadioStationInfo_t * rsi ) ) : void
    + setPlaybackStateChangeEventCallback( void(* cb)( bool ) ) : void
    + setSearchStateChangeEventCallback( void(* cb)( bool ) ) : void
}

@enduml

@startuml

interface Controller {
    + init( void ) : bool
    + load( ArgOptions_t * opts ) : void
    + free( void ) : void
    - - - -
    <b>Playback</b>
    - - - -
    + playback.getPlaybackState( void ) : bool
    + playback.start( const RadioStationInfo_t * station ) : bool
    + playback.stop( void ) : void
    + playback.modifyVolume( int delta ) : void
    + playback.testStream( const char * url, String_t * codec, ulong * bitrate ) : bool
    + playback.validateURL( const char * url ) : bool
    - - - -
    <b>Search</b>
    - - - -
    + search.getStations( RadioBrowserFilter_t * filter, Vector_t * stations ) : bool
    + search.getStationsBy( const ByCategory_e category, const char * search_term, Vector_t * stations ) : bool
    + search.getCategoryItems( const ListCategory_e category, const RadioBrowserFilter_t * filter, Vector_t * categories ) : bool
    - - - -
    <b>Settings</b>
    - - - -
    + cfg.toggleFavourite( RadioStationInfo_t * rsi, StationSrc_e src ) : bool
    + cfg.updateFavourite( RadioStationInfo_t * rsi, StationSrc_e src ) : bool
    + cfg.isFavourite( const RadioStationInfo_t * rsi, StationSrc_e src ) : bool
    + cfg.isFavouriteUUID( const char * uuid, StationSrc_e src ) : bool
    + cfg.saveFavourites( void ) : bool
    + cfg.getListOfFavourites( Vector_t * stations ) : bool
    + cfg.setFavouriteSorting( RadioStationInfo_SortBy_e attr ) : void
    + cfg.getUiTheme( void ) : struct ColourTheme
    + cfg.favTabThemingState( void ) : bool
    + cfg.largeRowsForFavTab( void ) : bool
    + cfg.largeRowsForSearchTab( void ) : bool
    + cfg.largeRowsForBrowserTab( void ) : bool
    - - - -
    <b>Callback setup</b>
    - - - -
    + setVolumeChangeEventCallback( void(* cb)( int ) ) : void
    + setSongChangeEventCallback( void(* cb)( const char *) ) : void
    + setStationChangeEventCallback( void(* cb)( const RadioStationInfo_t * rsi ) ) : void
    + setPlaybackStateChangeEventCallback( void(* cb)( bool ) ) : void
    + setSearchStateChangeEventCallback( void(* cb)( bool ) ) : void
}

@enduml

PlantUML version 1.2021.7(Sun May 23 14:40:07 CEST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: Dynamic Code Evolution 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>