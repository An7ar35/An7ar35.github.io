<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="312px" preserveAspectRatio="none" style="width:860px;height:312px;background:#FFFFFF;" version="1.1" viewBox="0 0 860 312" width="860px" zoomAndPan="magnify"><defs><filter height="300%" id="f15v56r1iewczn" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[1781b884ed39f8b724cb55c85c5809c6]
class RadioStationInfo--><rect codeLine="3" fill="#FEFECE" filter="url(#f15v56r1iewczn)" height="238.4609" id="RadioStationInfo" style="stroke:#A80036;stroke-width:1.5;" width="500" x="7" y="33.5"/><ellipse cx="203.25" cy="49.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M199.6719,45.2813 L199.6719,43 L207.0625,43 L207.0625,45.2813 L204.5938,45.2813 L204.5938,53.7344 L207.0625,53.7344 L207.0625,56 L199.6719,56 L199.6719,53.7344 L202.1406,53.7344 L202.1406,45.2813 L199.6719,45.2813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="99" x="223.75" y="53.6543">RadioStationInfo</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="506" y1="65.5" y2="65.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="311" x="13" y="79.7104">typedef int (* Comparator)( const void *, const void * )</text><line style="stroke:#A80036;stroke-width:1.0;" x1="8" x2="506" y1="86.3047" y2="86.3047"/><line style="stroke:#A80036;stroke-width:1.0;" x1="8" x2="506" y1="88.3047" y2="88.3047"/><ellipse cx="18" cy="97.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="121" x="27" y="100.5151">init( void * rsi ) : void</text><ellipse cx="18" cy="110.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="248" x="27" y="113.3198">copy( const void * from, void * dest ) : void</text><ellipse cx="18" cy="122.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="27" y="126.1245">dup( const void * rsi ) : void *</text><ellipse cx="18" cy="135.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="171" x="27" y="138.9292">freeContent( void * rsi ) : void</text><ellipse cx="18" cy="148.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="27" y="151.7339">free( void * rsi ) : void</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="8" x2="506" y1="158.3281" y2="158.3281"/><ellipse cx="18" cy="169.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="27" y="172.5386">sameUUID( const void * lhs, const void * rhs ) : bool</text><ellipse cx="18" cy="182.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="269" x="27" y="185.3433">equal( const void * lhs, const void * rhs ) : bool</text><ellipse cx="18" cy="194.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="27" y="198.1479">hash( const void * uuid_str ) : uint64_t</text><ellipse cx="18" cy="207.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="474" x="27" y="210.9526">compareBy( const void * lhs, const void * rhs, RadioStationInfo_SortBy_e attr ) : int</text><ellipse cx="18" cy="220.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="27" y="223.7573">getComparator( RadioStationInfo_SortBy_e attr ) : Comparator</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="8" x2="506" y1="230.3516" y2="230.3516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="68" x="13" y="244.562">/* getters */</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="8" x2="506" y1="251.1563" y2="251.1563"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="13" y="265.3667">/* setters */</text><!--MD5=[2573b47648fafdebc4722fb4d65ebab2]
class RadioStationInfo_SortBy_e--><rect codeLine="29" fill="#FEFECE" filter="url(#f15v56r1iewczn)" height="291.2891" id="RadioStationInfo_SortBy_e" style="stroke:#A80036;stroke-width:1.5;" width="304" x="542" y="7"/><ellipse cx="610.75" cy="23" fill="#EB937F" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M614.8594,29.5 L607.1406,29.5 L607.1406,16.5 L614.8594,16.5 L614.8594,18.7813 L609.5938,18.7813 L609.5938,21.5 L614.3594,21.5 L614.3594,23.7813 L609.5938,23.7813 L609.5938,27.2344 L614.8594,27.2344 L614.8594,29.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="158" x="631.25" y="27.1543">RadioStationInfo_SortBy_e</text><line style="stroke:#A80036;stroke-width:1.5;" x1="543" x2="845" y1="39" y2="39"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="225" x="548" y="53.2104">RADIOSTATIONINFO_SORTBY_NONE = 0</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="216" x="548" y="66.0151">RADIOSTATIONINFO_SORTBY_SOURCE</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="252" x="548" y="78.8198">RADIOSTATIONINFO_SORTBY_SOURCE_DESC</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="201" x="548" y="91.6245">RADIOSTATIONINFO_SORTBY_NAME</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="237" x="548" y="104.4292">RADIOSTATIONINFO_SORTBY_NAME_DESC</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="200" x="548" y="117.2339">RADIOSTATIONINFO_SORTBY_TAGS</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="236" x="548" y="130.0386">RADIOSTATIONINFO_SORTBY_TAGS_DESC</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="224" x="548" y="142.8433">RADIOSTATIONINFO_SORTBY_COUNTRY</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="260" x="548" y="155.6479">RADIOSTATIONINFO_SORTBY_COUNTRY_DESC</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="548" y="168.4526">RADIOSTATIONINFO_SORTBY_COUNTRYCODE</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="548" y="181.2573">RADIOSTATIONINFO_SORTBY_COUNTRYCODE_DESC</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="548" y="194.062">RADIOSTATIONINFO_SORTBY_STATE</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="241" x="548" y="206.8667">RADIOSTATIONINFO_SORTBY_STATE_DESC</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="232" x="548" y="219.6714">RADIOSTATIONINFO_SORTBY_LANGUAGE</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="548" y="232.4761">RADIOSTATIONINFO_SORTBY_LANGUAGE_DESC</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="548" y="245.2808">RADIOSTATIONINFO_SORTBY_CODEC</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="548" y="258.0854">RADIOSTATIONINFO_SORTBY_CODEC_DESC</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="548" y="270.8901">RADIOSTATIONINFO_SORTBY_BITRATE</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="548" y="283.6948">RADIOSTATIONINFO_SORTBY_BITRATE_DESC</text><line style="stroke:#A80036;stroke-width:1.5;" x1="543" x2="845" y1="290.2891" y2="290.2891"/><!--MD5=[3b9880a8e618bb9687ff1c1952851b10]
link RadioStationInfo to RadioStationInfo_SortBy_e--><path codeLine="51" d="M507.08,152.5 C516.92,152.5 526.77,152.5 536.61,152.5 " fill="none" id="RadioStationInfo-to-RadioStationInfo_SortBy_e" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="541.76,152.5,532.76,148.5,536.76,152.5,532.76,156.5,541.76,152.5" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[308ed9e4e839ce8d88e391b38be4b8a9]
@startuml
'https://plantuml.com/class-diagram

interface RadioStationInfo {
    typedef int (* Comparator)( const void *, const void * )
    ====
'    <b>Bit mask constants</b>
'    - - - -
'    + unsigned IS_FAV = 0b0001
'    + unsigned IS_QUEUED = 0b0010
'    + unsigned IS_LOCAL = 0b0100
'    ====
    + init( void * rsi ) : void
    + copy( const void * from, void * dest ) : void
    + dup( const void * rsi ) : void *
    + freeContent( void * rsi ) : void
    + free( void * rsi ) : void
    ....
    + sameUUID( const void * lhs, const void * rhs ) : bool
    + equal( const void * lhs, const void * rhs ) : bool
    + hash( const void * uuid_str ) : uint64_t
    + compareBy( const void * lhs, const void * rhs, RadioStationInfo_SortBy_e attr ) : int
    + getComparator( RadioStationInfo_SortBy_e attr ) : Comparator
    ....
    /* getters */
    ....
    /* setters */
}

enum RadioStationInfo_SortBy_e {
    RADIOSTATIONINFO_SORTBY_NONE = 0
    RADIOSTATIONINFO_SORTBY_SOURCE
    RADIOSTATIONINFO_SORTBY_SOURCE_DESC
    RADIOSTATIONINFO_SORTBY_NAME
    RADIOSTATIONINFO_SORTBY_NAME_DESC
    RADIOSTATIONINFO_SORTBY_TAGS
    RADIOSTATIONINFO_SORTBY_TAGS_DESC
    RADIOSTATIONINFO_SORTBY_COUNTRY
    RADIOSTATIONINFO_SORTBY_COUNTRY_DESC
    RADIOSTATIONINFO_SORTBY_COUNTRYCODE
    RADIOSTATIONINFO_SORTBY_COUNTRYCODE_DESC
    RADIOSTATIONINFO_SORTBY_STATE
    RADIOSTATIONINFO_SORTBY_STATE_DESC
    RADIOSTATIONINFO_SORTBY_LANGUAGE
    RADIOSTATIONINFO_SORTBY_LANGUAGE_DESC
    RADIOSTATIONINFO_SORTBY_CODEC
    RADIOSTATIONINFO_SORTBY_CODEC_DESC
    RADIOSTATIONINFO_SORTBY_BITRATE
    RADIOSTATIONINFO_SORTBY_BITRATE_DESC
}

RadioStationInfo -right-> RadioStationInfo_SortBy_e
@enduml

@startuml

interface RadioStationInfo {
    typedef int (* Comparator)( const void *, const void * )
    ====
    + init( void * rsi ) : void
    + copy( const void * from, void * dest ) : void
    + dup( const void * rsi ) : void *
    + freeContent( void * rsi ) : void
    + free( void * rsi ) : void
    ....
    + sameUUID( const void * lhs, const void * rhs ) : bool
    + equal( const void * lhs, const void * rhs ) : bool
    + hash( const void * uuid_str ) : uint64_t
    + compareBy( const void * lhs, const void * rhs, RadioStationInfo_SortBy_e attr ) : int
    + getComparator( RadioStationInfo_SortBy_e attr ) : Comparator
    ....
    /* getters */
    ....
    /* setters */
}

enum RadioStationInfo_SortBy_e {
    RADIOSTATIONINFO_SORTBY_NONE = 0
    RADIOSTATIONINFO_SORTBY_SOURCE
    RADIOSTATIONINFO_SORTBY_SOURCE_DESC
    RADIOSTATIONINFO_SORTBY_NAME
    RADIOSTATIONINFO_SORTBY_NAME_DESC
    RADIOSTATIONINFO_SORTBY_TAGS
    RADIOSTATIONINFO_SORTBY_TAGS_DESC
    RADIOSTATIONINFO_SORTBY_COUNTRY
    RADIOSTATIONINFO_SORTBY_COUNTRY_DESC
    RADIOSTATIONINFO_SORTBY_COUNTRYCODE
    RADIOSTATIONINFO_SORTBY_COUNTRYCODE_DESC
    RADIOSTATIONINFO_SORTBY_STATE
    RADIOSTATIONINFO_SORTBY_STATE_DESC
    RADIOSTATIONINFO_SORTBY_LANGUAGE
    RADIOSTATIONINFO_SORTBY_LANGUAGE_DESC
    RADIOSTATIONINFO_SORTBY_CODEC
    RADIOSTATIONINFO_SORTBY_CODEC_DESC
    RADIOSTATIONINFO_SORTBY_BITRATE
    RADIOSTATIONINFO_SORTBY_BITRATE_DESC
}

RadioStationInfo -right-> RadioStationInfo_SortBy_e
@enduml

PlantUML version 1.2021.7(Sun May 23 14:40:07 CEST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: Dynamic Code Evolution 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>