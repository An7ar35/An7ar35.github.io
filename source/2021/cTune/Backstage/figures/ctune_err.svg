<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="226px" preserveAspectRatio="none" style="width:770px;height:226px;background:#FFFFFF;" version="1.1" viewBox="0 0 770 226" width="770px" zoomAndPan="magnify"><defs><filter height="300%" id="f6amtki9qmhdm" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[5937a7beb95dee0698b24887488924d5]
class ctune_err--><rect codeLine="11" fill="#FEFECE" filter="url(#f6amtki9qmhdm)" height="142.4063" id="ctune_err" style="stroke:#A80036;stroke-width:1.5;" width="387" x="369.5" y="45.5"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="58" x="534" y="61.6387">ctune_err</text><line style="stroke:#A80036;stroke-width:1.5;" x1="370.5" x2="755.5" y1="69.4688" y2="69.4688"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="377.5" y="77.4688"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="389.5" y="83.6792">errno : volatile int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="377.5" y="90.2734"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="181" x="389.5" y="96.4839">errno_mutex : pthread_mutex_t</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="377.5" y="103.0781"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="282" x="389.5" y="109.2886">print_callback : void (*)( const char * str, int err );</text><line style="stroke:#A80036;stroke-width:1.0;" x1="370.5" x2="755.5" y1="115.8828" y2="115.8828"/><ellipse cx="380.5" cy="126.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="104" x="389.5" y="130.0933">set( int err ) : void</text><ellipse cx="380.5" cy="139.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="110" x="389.5" y="142.8979">number( void ) : int</text><ellipse cx="380.5" cy="152.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="389.5" y="155.7026">strerror( void ) : const char *</text><ellipse cx="380.5" cy="165.2969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="170" x="389.5" y="168.5073">print( int error ) : const char *</text><ellipse cx="380.5" cy="178.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="361" x="389.5" y="181.312">setPrintErrCallback( void(* cb)( const char * str, int err ) ) : void</text><path d="M6,6 L6,31.1328 A0,0 0 0 0 6,31.1328 L118,31.1328 A0,0 0 0 0 118,31.1328 L118,24 L373.5,126.2852 L118,16 L118,16 L108,6 L6,6 A0,0 0 0 0 6,6 " fill="#FFFFFF" filter="url(#f6amtki9qmhdm)" style="stroke:#808080;stroke-width:1.0;"/><path d="M108,6 L108,16 L118,16 L108,6 " fill="#FFFFFF" style="stroke:#808080;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="53" x="12" y="23.0669">Sets the</text><text fill="#000000" font-family="sans-serif" font-size="13" font-style="italic" lengthAdjust="spacing" textLength="34" x="69" y="23.0669">errno</text><path d="M6,41.1328 L6,66.2656 A0,0 0 0 0 6,66.2656 L120,66.2656 A0,0 0 0 0 120,66.2656 L120,59.1328 L373.5,139.0898 L120,51.1328 L120,51.1328 L110,41.1328 L6,41.1328 A0,0 0 0 0 6,41.1328 " fill="#FFFFFF" filter="url(#f6amtki9qmhdm)" style="stroke:#808080;stroke-width:1.0;"/><path d="M110,41.1328 L110,51.1328 L120,51.1328 L110,41.1328 " fill="#FFFFFF" style="stroke:#808080;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="55" x="12" y="58.1997">Gets the</text><text fill="#000000" font-family="sans-serif" font-size="13" font-style="italic" lengthAdjust="spacing" textLength="34" x="71" y="58.1997">errno</text><path d="M6,76.2656 L6,131.6641 A0,0 0 0 0 6,131.6641 L237,131.6641 A0,0 0 0 0 237,131.6641 L237,107.9648 L373.5,151.8945 L237,99.9648 L237,86.2656 L227,76.2656 L6,76.2656 A0,0 0 0 0 6,76.2656 " fill="#FFFFFF" filter="url(#f6amtki9qmhdm)" style="stroke:#808080;stroke-width:1.0;"/><path d="M227,76.2656 L227,86.2656 L237,86.2656 L227,76.2656 " fill="#FFFFFF" style="stroke:#808080;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="210" x="12" y="93.3325">Gets the string for the set cTune</text><text fill="#000000" font-family="sans-serif" font-size="13" font-style="italic" lengthAdjust="spacing" textLength="34" x="12" y="108.4653">errno</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="166" x="50" y="108.4653">and resets the errno back</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="154" x="12" y="123.5981">to `CTUNE_ERR_NONE`</text><path d="M6,141.6641 L6,181.9297 A0,0 0 0 0 6,181.9297 L297,181.9297 A0,0 0 0 0 297,181.9297 L297,165.7969 L373.5,164.6992 L297,157.7969 L297,151.6641 L287,141.6641 L6,141.6641 A0,0 0 0 0 6,141.6641 " fill="#FFFFFF" filter="url(#f6amtki9qmhdm)" style="stroke:#808080;stroke-width:1.0;"/><path d="M287,141.6641 L287,151.6641 L297,151.6641 L287,141.6641 " fill="#FFFFFF" style="stroke:#808080;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="173" x="12" y="158.731">Gets the string for a cTune</text><text fill="#000000" font-family="sans-serif" font-size="13" font-style="italic" lengthAdjust="spacing" textLength="34" x="189" y="158.731">errno</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="0" x="227" y="158.731"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="55" x="227" y="158.731">without</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="121" x="12" y="173.8638">resetting the errno</text><path d="M6,191.9297 L6,217.0625 A0,0 0 0 0 6,217.0625 L334,217.0625 A0,0 0 0 0 334,217.0625 L334,209.9297 L373.5,177.5039 L334,201.9297 L334,201.9297 L324,191.9297 L6,191.9297 A0,0 0 0 0 6,191.9297 " fill="#FFFFFF" filter="url(#f6amtki9qmhdm)" style="stroke:#808080;stroke-width:1.0;"/><path d="M324,191.9297 L324,201.9297 L334,201.9297 L324,191.9297 " fill="#FFFFFF" style="stroke:#808080;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="307" x="12" y="208.9966">Sets a printing callback for when an error is set</text><!--MD5=[c709b8349e5b0d0be1b420456b733570]
link ctune_err$$$LEFT to ctune_err--><!--MD5=[b891e680f1ff4ec11c664d0a76cbfa91]
@startuml
'https://plantuml.com/component-diagram

hide circle

skinparam note {
    BackgroundColor white
    ArrowColor gray
    BorderColor grey
}

class ctune_err {
    - errno : volatile int
    - errno_mutex : pthread_mutex_t
    - print_callback : void (*)( const char * str, int err );
    - - - -
    + set( int err ) : void
    + number( void ) : int
    + strerror( void ) : const char *
    + print( int error ) : const char *
    + setPrintErrCallback( void(* cb)( const char * str, int err ) ) : void
}

note left of ctune_err::set(
    Sets the <i>errno</i>
end note

note left of ctune_err::number(
    Gets the <i>errno</i>
end note

note left of ctune_err::strerror( #grey
    Gets the string for the set cTune
    <i>errno</i> and resets the errno back
    to `CTUNE_ERR_NONE`
end note

note left of ctune_err::print(
    Gets the string for a cTune <i>errno</i> **without**
    resetting the errno
end note

note left of ctune_err::setPrintErrCallback(
    Sets a printing callback for when an error is set
end note

@enduml

@startuml

hide circle

skinparam note {
    BackgroundColor white
    ArrowColor gray
    BorderColor grey
}

class ctune_err {
    - errno : volatile int
    - errno_mutex : pthread_mutex_t
    - print_callback : void (*)( const char * str, int err );
    - - - -
    + set( int err ) : void
    + number( void ) : int
    + strerror( void ) : const char *
    + print( int error ) : const char *
    + setPrintErrCallback( void(* cb)( const char * str, int err ) ) : void
}

note left of ctune_err::set(
    Sets the <i>errno</i>
end note

note left of ctune_err::number(
    Gets the <i>errno</i>
end note

note left of ctune_err::strerror( #grey
    Gets the string for the set cTune
    <i>errno</i> and resets the errno back
    to `CTUNE_ERR_NONE`
end note

note left of ctune_err::print(
    Gets the string for a cTune <i>errno</i> **without**
    resetting the errno
end note

note left of ctune_err::setPrintErrCallback(
    Sets a printing callback for when an error is set
end note

@enduml

PlantUML version 1.2021.7(Sun May 23 14:40:07 CEST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: Dynamic Code Evolution 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>