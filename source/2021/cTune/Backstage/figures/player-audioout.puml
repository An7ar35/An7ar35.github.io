@startuml
'https://plantuml.com/class-diagram

enum PLAYBACK_CTRL {
    PLAYBACK_CTRL_STATE = 0
    PLAYBACK_CTRL_OFF = 1
    PLAYBACK_CTRL_ON = 2
    PLAYBACK_CTRL_SWITCH = 3
}

class PlaybackArgs_t {
    url : String_t
    init_vol : int
    timeout_val : int
}

class RadioPlayer {
    - initialised : bool
    - player_initialised : bool
    - player_plugin : Player_t *
    - output_plugin : AudioOut_t *
    - stream_args : PlaybackArgs_t
    ----
    <i>Player control</i>
    ----
    - player.thread : pthread_t
    - player.state : volatile sig_atomic_t
    - launchPlayback( void * args ) : void *
    - setPlaybackState( enum PLAYBACK_CTRL ctrl ) : bool
    ----
    <i>Callbacks</i>
    ----
    - cb.song_change_callback : void (*)( const char * str );
    - cb.volume_change_event_callback : void (*)( const int vol );
    - cb.playback_state_change_cb : void (*)( bool state );
    ====
    <b>Setup</b>
    ----
    + init( void (* song_change_cb)( const char * str ), void (* vol_change_event_cb)( const int vol ) ) : void
    + setStateChangeCallback( void (* playback_state_change_cb)( bool ) ) : void
    + loadPlayerPlugin( Player_t * player ) : bool
    + loadSoundServerPlugin( AudioOut_t * sound_server ) : bool
    ----
    <b>Playback control</b>
    ----
    + playRadioStream( const char * url, const int volume, int timeout_val ) : bool
    + stopPlayback( void ) : void
    + getPlaybackState( void ) : bool
    + modifyVolume( int delta ) : void
    ----
    <b>Utilities</b>
    ----
    + getError( void ) : int
    + testStream( const char * url, int timeout_val, String_t * codec_str, ulong * bitrate ) : bool
}

interface Player_t {
    + name : String_t
    + handle : void *
    + abi_version : unsigned int *
    ----
    + init( AudioOut_t * sound_server, bool (* playback_ctrl_cb)( enum PLAYBACK_CTRL ), void (* song_change_cb)( const char * str ) ) : void
    + playRadioStream( const char * url, const int volume, int timeout_val ) : bool
    + getError( void ) : int
    + testStream( const char * url, int timeout_val, String_t * codec_str, ulong * bitrate ) : bool
}

interface AudioOut_t {
    + name : String_t
    + handle : void *
    + abi_version : unsigned int *

    + init( OutputFmt_e fmt, int sample_rate, uint channels, uint samples, int volume ) : int
    + write( const void * buffer, int buff_size ) : void
    + setVolume( int vol ) : void
    + changeVolume( int delta ) : bool
    + getVolume( void ) : int
    + shutdown( void ) : void
}

enum OutputFmt_e {
    AUDIO_OUTPUT_FMT_S16 = 16,
    AUDIO_OUTPUT_FMT_S32 = 32,
}

RadioPlayer -left-> PlaybackArgs_t
RadioPlayer --> Player_t
RadioPlayer --> AudioOut_t
Player_t --> AudioOut_t
Player_t --> PLAYBACK_CTRL
RadioPlayer --> PLAYBACK_CTRL
AudioOut_t -> OutputFmt_e

@enduml