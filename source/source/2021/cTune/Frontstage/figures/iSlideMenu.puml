@startuml
'https://plantuml.com/class-diagram

class ScrollBar_t
class Vector_t
class String_t
hide ScrollBar_t members
hide Vector_t members
hide String_t members

class WindowProperty_t {
    + rows : int
    + cols : int
    + pos_y : int
    + pos_x : int
}

class SlideMenu_t {
    + redraw : bool
    + in_focus : bool
    + root : SlideMenu_Menu_t
    + canvas_property : WindowProperty_t *
    + canvas_panel : PANEL *
    + canvas_win : WINDOW *
    + update_scrollbar : bool
    + scrollbar : ScrollBar_t
    ----
    <b>Row property</b>
    ----
    + row.curr_menu : SlideMenu_Menu_t *
    + row.depth : size_t
    + row.first_on_page : size_t
    + row.last_on_page : size_t
    + row.selected : size_t
}

enum SlideMenu_ItemType_e {
    SLIDEMENU_PARENT
    SLIDEMENU_MENU
    SLIDEMENU_LEAF
}

class SlideMenu_Item_t {
    + index : size_t
    + text : String_t
    + sub_menu : SlideMenu_Menu_t *
    + type : SlideMenu_ItemType_e
    + parent_menu : SlideMenu_Menu_t *
    + data : void *
    + ctrl_trigger : bool
    + ctrl_fn : bool (*)( SlideMenu_Item_t * item );
}

class SlideMenu_Menu_t {
    items : Vector_t
    parent : SlideMenu_Menu_t *
    parent_i : size_t
}

interface SlideMenu {
    + init( const WindowProperty_t * canvas_property ) : SlideMenu_t
    + createMenu( SlideMenu_Menu_t ** menu_ptr, SlideMenu_Menu_t * parent, size_t parent_index ) : SlideMenu_Menu_t *
    + createMenuItem( SlideMenu_Menu_t * menu, SlideMenu_ItemType_e type, const char * text, void * data, bool (* ctrl_fn)( SlideMenu_Item_t * ) ) : bool
    + setRedraw( SlideMenu_t * menu ) : void
    + setFocus( SlideMenu_t * menu, bool focus ) : void
    + reset( SlideMenu_t * menu ) : void
    + resize( SlideMenu_t * menu ) : void
    + bool (* show( SlideMenu_t * menu ) : bool
    + hide( SlideMenu_t * menu ) : void
    + free( SlideMenu_t * menu ) : void
    ----
    <b>Navigation</b>
    ----
    + navKeyEnter( SlideMenu_t * menu ) : void
    + navKeyUp( SlideMenu_t * menu ) : void
    + navKeyDown( SlideMenu_t * menu ) : void
    + navKeyRight( SlideMenu_t * menu ) : void
    + navKeyLeft( SlideMenu_t * menu ) : void
    + navKeyPageUp( SlideMenu_t * menu ) : void
    + navKeyPageDown( SlideMenu_t * menu ) : void
    + navKeyFirst( SlideMenu_t * menu ) : void
    + navKeyLast( SlideMenu_t * menu ) : void
}

SlideMenu --> SlideMenu_t
SlideMenu --> WindowProperty_t
SlideMenu --> SlideMenu_Menu_t
SlideMenu --> SlideMenu_ItemType_e
SlideMenu --> SlideMenu_Item_t

SlideMenu_t --> WindowProperty_t
SlideMenu_t --> SlideMenu_Menu_t
SlideMenu_t --> ScrollBar_t

SlideMenu_Menu_t --> Vector_t

SlideMenu_Item_t --> String_t
SlideMenu_Item_t --> SlideMenu_Menu_t
SlideMenu_Item_t --> SlideMenu_ItemType_e

@enduml