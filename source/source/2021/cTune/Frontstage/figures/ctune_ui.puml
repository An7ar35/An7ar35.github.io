@startuml
skinparam linetype ortho
'skinparam linetype polyline

package ui #lightgrey {
    component UI
    component Resizer
    interface " " as iResizer

    Resizer -up- iResizer
    UI -up--> Resizer

    package definitions #white {
        component Language
        component KeyDescription
        component KeyBinding
        component Theme
        interface " " as iLanguage
        interface " " as iTheme
        interface " " as iKeyBinding

        Language -up- iLanguage
        Theme -up- iTheme
        KeyBinding -up- iKeyBinding

        KeyBinding --> KeyDescription
        KeyBinding -> Language
    }

    UI -up--> KeyBinding
    UI -up--> Language
    UI -up--> Theme

    package widget #white {
        component BorderWin
        component ScrollBar
        component SlideMenu
        component Dialog
        component ScrollWin

        Dialog    *-- ScrollWin
        Dialog    *-- ScrollBar
        Dialog    *-- BorderWin
        SlideMenu *-- ScrollBar
    }

    package window #white {
        component RSListWin
        component BrowserWin

        BrowserWin *-left- RSListWin
    }

    package dialog #white {
        component ContextHelp
        component RSFind
        component RSInfo
        component RSEdit
        component OptionsMenu

        ContextHelp *-- Dialog
    }

'    dialog -[#purple]--( iKeyBinding
'    dialog -[#purple]--( iResizer


    BrowserWin  *-- SlideMenu
    OptionsMenu *-- SlideMenu
    RSFind      *-- Dialog
    RSInfo      *-- Dialog
    RSEdit      *-- Dialog
    OptionsMenu *-- BorderWin

    UI      --> OptionsMenu
    UI      --> ContextHelp
    UI      --> RSFind
    UI      --> RSInfo
    UI      --> RSEdit
    UI      --> RSListWin
    UI      --> BrowserWin

    note top of iLanguage #lightblue
        **Global UI access:**
        · text( TextID_e : enum ) : const char *
    end note
    note top of iTheme #lightblue
        **Global UI access:**
        · color( ThemeItem_e : enum ) : int
    end note
    note top of iKeyBinding #lightblue
        **Global UI access:**
        · getAction( Context_e: enum, ncurse_key: int ) : ActionID_e
        **ContextHelp access:**
        · getKeyText( keyID : KeyboardKey_e  ) : const char *
        · processEntries( ctx : Context_e, userdata : void *, callback : void (*)( binding : const KeyBinding_t *, userdata : void * ) ) : bool
    end note
    note left of iResizer #lightblue
        **Global UI access:**
        · push( void(* resize_fn)( void * ), void * data ) : bool
        · pop() : void
        · resize() : void
    end note
}

@enduml