<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="683px" preserveAspectRatio="none" style="width:516px;height:683px;background:#FFFFFF;" version="1.1" viewBox="0 0 516 683" width="516px" zoomAndPan="magnify"><defs><filter height="300%" id="f1kxheqhi3ugdl" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[fb0932da17f9982e4848347a102654e2]
class Settings--><rect codeLine="5" fill="#FEFECE" filter="url(#f1kxheqhi3ugdl)" height="662.6016" id="Settings" style="stroke:#A80036;stroke-width:1.5;" width="495" x="7" y="7"/><ellipse cx="225.25" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M227.7188,28.875 Q227.1406,29.1875 226.5,29.3438 Q225.8594,29.5 225.1563,29.5 Q222.6563,29.5 221.3281,27.8281 Q220.0156,26.1563 220.0156,23 Q220.0156,19.8438 221.3281,18.1719 Q222.6563,16.5 225.1563,16.5 Q225.8594,16.5 226.5,16.6563 Q227.1563,16.8125 227.7188,17.125 L227.7188,19.9219 Q227.0938,19.3594 226.5,19.0938 Q225.9063,18.8125 225.2813,18.8125 Q223.9375,18.8125 223.25,19.875 Q222.5625,20.9375 222.5625,23 Q222.5625,25.0781 223.25,26.1406 Q223.9375,27.1875 225.2813,27.1875 Q225.9063,27.1875 226.5,26.9219 Q227.0938,26.6563 227.7188,26.0781 L227.7188,28.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="50" x="245.75" y="27.1543">Settings</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="501" y1="39" y2="39"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="47"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="211" x="27" y="53.2104">xdg.fallback_data_path : const char *</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="59.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="276" x="27" y="66.0151">xdg.const char * fallback_cfg_path : const char *</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="72.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="191" x="27" y="78.8198">xdg.resolved_data_path : String_t</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="85.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="27" y="91.6245">xdg.resolved_cfg_path : String_t</text><line style="stroke:#A80036;stroke-width:1.0;" x1="8" x2="501" y1="98.2188" y2="98.2188"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="106.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="195" x="27" y="112.4292">favourites.dir_name : const char *</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="119.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="27" y="125.2339">favourites.file_name : const char *</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="131.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="328" x="27" y="138.0386">favourites.favs : HashMap_t[CTUNE_STATIONSRC_COUNT]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="144.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="260" x="27" y="150.8433">favourites.sort_id : RadioStationInfo_SortBy_e</text><line style="stroke:#A80036;stroke-width:1.0;" x1="8" x2="501" y1="157.4375" y2="157.4375"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="165.4375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="112" x="27" y="171.6479">config.loaded : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="178.2422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="27" y="184.4526">config.resume_volume ; int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="191.0469"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="181" x="27" y="197.2573">config.play_log_overwrite : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="203.8516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="176" x="27" y="210.062">config.timeout_stream_val : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="216.6563"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="181" x="27" y="222.8667">config.timeout_network_val : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="229.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="117" x="27" y="235.6714">config.ui : UIConfig_t</text><line style="stroke:#A80036;stroke-width:1.0;" x1="8" x2="501" y1="242.2656" y2="242.2656"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="250.2656"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="256.4761">last_station.uuid : String_t</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="263.0703"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="167" x="27" y="269.2808">last_station.src : StationSrc_e</text><line style="stroke:#A80036;stroke-width:1.0;" x1="8" x2="501" y1="275.875" y2="275.875"/><line style="stroke:#A80036;stroke-width:1.0;" x1="8" x2="501" y1="277.875" y2="277.875"/><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacing" textLength="65" x="13" y="290.0854">XDG paths</text><line style="stroke:#A80036;stroke-width:1.0;" x1="8" x2="501" y1="296.6797" y2="296.6797"/><ellipse cx="18" cy="307.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="455" x="27" y="310.8901">xdg.resolveCfgFilePath( const char * file_name, String_t * resolved_path ) : void</text><ellipse cx="18" cy="320.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="462" x="27" y="323.6948">xdg.resolveDataFilePath( const char * file_name, String_t * resolved_path ) : void</text><line style="stroke:#A80036;stroke-width:1.0;" x1="8" x2="501" y1="330.2891" y2="330.2891"/><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacing" textLength="114" x="13" y="344.4995">Favourite stations</text><line style="stroke:#A80036;stroke-width:1.0;" x1="8" x2="501" y1="351.0938" y2="351.0938"/><ellipse cx="18" cy="362.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="187" x="27" y="365.3042">favs.loadFavourites( void ) : bool</text><ellipse cx="18" cy="374.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="27" y="378.1089">favs.saveFavourites( void ) : bool</text><ellipse cx="18" cy="387.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="27" y="390.9136">favs.refreshView( Vector_t * stations ) : bool</text><ellipse cx="18" cy="400.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="359" x="27" y="403.7183">favs.setSortingAttribute( RadioStationInfo_SortBy_e attr ) : void</text><ellipse cx="18" cy="413.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="27" y="416.5229">favs.isFavourite( const char * uuid, StationSrc_e src ) : bool</text><ellipse cx="18" cy="426.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="469" x="27" y="429.3276">favs.getFavourite( const char * uuid, StationSrc_e src ) : const RadioStationInfo_t *</text><ellipse cx="18" cy="438.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="403" x="27" y="442.1323">favs.addStation( const RadioStationInfo_t * rsi, StationSrc_e src ) : bool</text><ellipse cx="18" cy="451.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="426" x="27" y="454.937">favs.removeStation( const RadioStationInfo_t * rsi, StationSrc_e src ) : bool</text><line style="stroke:#A80036;stroke-width:1.0;" x1="8" x2="501" y1="461.5313" y2="461.5313"/><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacing" textLength="161" x="13" y="475.7417">Application configuration</text><line style="stroke:#A80036;stroke-width:1.0;" x1="8" x2="501" y1="482.3359" y2="482.3359"/><ellipse cx="18" cy="493.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="144" x="27" y="496.5464">cfg.loadCfg)( void ) : bool</text><ellipse cx="18" cy="506.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="509.3511">cfg.isLoaded( void ) : bool</text><ellipse cx="18" cy="518.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="144" x="27" y="522.1558">cfg.writeCfg( void ) : bool</text><ellipse cx="18" cy="531.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="27" y="534.9604">cfg.getVolume( void ) : int</text><ellipse cx="18" cy="544.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="137" x="27" y="547.7651">cfg.setVolume( int ) : int</text><ellipse cx="18" cy="557.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="145" x="27" y="560.5698">cfg.modVolume( int ) : int</text><ellipse cx="18" cy="570.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="248" x="27" y="573.3745">cfg.getLastPlayedUUID( void ) : const char *</text><ellipse cx="18" cy="582.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="240" x="27" y="586.1792">cfg.getLastPlayedSrc( void ) : StationSrc_e</text><ellipse cx="18" cy="595.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="337" x="27" y="598.9839">cfg.setLastPlayedStation( const char *, StationSrc_e ) : void</text><ellipse cx="18" cy="608.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="223" x="27" y="611.7886">cfg.playbackLogOverwrite( void ) : bool</text><ellipse cx="18" cy="621.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="27" y="624.5933">cfg.getStreamTimeoutVal( void ) : int</text><ellipse cx="18" cy="634.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="215" x="27" y="637.3979">cfg.getNetworkTimeoutVal( void ) : int</text><ellipse cx="18" cy="646.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="195" x="27" y="650.2026">cfg.getUIConfig( void ) : UIConfig_t</text><ellipse cx="18" cy="659.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="27" y="663.0073">cfg.setUIConfig( const UIConfig_t * cfg ) : bool</text><!--MD5=[56b128115d5309d3cef20100828c71be]
@startuml
'https://plantuml.com/class-diagram

allowmixing

class Settings {
    - xdg.fallback_data_path : const char *
    - xdg.const char * fallback_cfg_path : const char *
    - xdg.resolved_data_path : String_t
    - xdg.resolved_cfg_path : String_t
    - - - -
    - favourites.dir_name : const char *
    - favourites.file_name : const char *
    - favourites.favs : HashMap_t[CTUNE_STATIONSRC_COUNT]
    - favourites.sort_id : RadioStationInfo_SortBy_e
    - - - -
    - config.loaded : bool
    - config.resume_volume ; int
    - config.play_log_overwrite : bool
    - config.timeout_stream_val : int
    - config.timeout_network_val : int
    - config.ui : UIConfig_t
    - - - -
    - last_station.uuid : String_t
    - last_station.src : StationSrc_e
    ====
    <b>XDG paths</b>
    - - - -
    + xdg.resolveCfgFilePath( const char * file_name, String_t * resolved_path ) : void
    + xdg.resolveDataFilePath( const char * file_name, String_t * resolved_path ) : void
    - - - -
    <b>Favourite stations</b>
    - - - -
    + favs.loadFavourites( void ) : bool
    + favs.saveFavourites( void ) : bool
    + favs.refreshView( Vector_t * stations ) : bool
    + favs.setSortingAttribute( RadioStationInfo_SortBy_e attr ) : void
    + favs.isFavourite( const char * uuid, StationSrc_e src ) : bool
    + favs.getFavourite( const char * uuid, StationSrc_e src ) : const RadioStationInfo_t *
    + favs.addStation( const RadioStationInfo_t * rsi, StationSrc_e src ) : bool
    + favs.removeStation( const RadioStationInfo_t * rsi, StationSrc_e src ) : bool
    - - - -
    <b>Application configuration</b>
    - - - -
    + cfg.loadCfg)( void ) : bool
    + cfg.isLoaded( void ) : bool
    + cfg.writeCfg( void ) : bool
    + cfg.getVolume( void ) : int
    + cfg.setVolume( int ) : int
    + cfg.modVolume( int ) : int
    + cfg.getLastPlayedUUID( void ) : const char *
    + cfg.getLastPlayedSrc( void ) : StationSrc_e
    + cfg.setLastPlayedStation( const char *, StationSrc_e ) : void
    + cfg.playbackLogOverwrite( void ) : bool
    + cfg.getStreamTimeoutVal( void ) : int
    + cfg.getNetworkTimeoutVal( void ) : int
    + cfg.getUIConfig( void ) : UIConfig_t
    + cfg.setUIConfig( const UIConfig_t * cfg ) : bool
}

@enduml

@startuml

allowmixing

class Settings {
    - xdg.fallback_data_path : const char *
    - xdg.const char * fallback_cfg_path : const char *
    - xdg.resolved_data_path : String_t
    - xdg.resolved_cfg_path : String_t
    - - - -
    - favourites.dir_name : const char *
    - favourites.file_name : const char *
    - favourites.favs : HashMap_t[CTUNE_STATIONSRC_COUNT]
    - favourites.sort_id : RadioStationInfo_SortBy_e
    - - - -
    - config.loaded : bool
    - config.resume_volume ; int
    - config.play_log_overwrite : bool
    - config.timeout_stream_val : int
    - config.timeout_network_val : int
    - config.ui : UIConfig_t
    - - - -
    - last_station.uuid : String_t
    - last_station.src : StationSrc_e
    ====
    <b>XDG paths</b>
    - - - -
    + xdg.resolveCfgFilePath( const char * file_name, String_t * resolved_path ) : void
    + xdg.resolveDataFilePath( const char * file_name, String_t * resolved_path ) : void
    - - - -
    <b>Favourite stations</b>
    - - - -
    + favs.loadFavourites( void ) : bool
    + favs.saveFavourites( void ) : bool
    + favs.refreshView( Vector_t * stations ) : bool
    + favs.setSortingAttribute( RadioStationInfo_SortBy_e attr ) : void
    + favs.isFavourite( const char * uuid, StationSrc_e src ) : bool
    + favs.getFavourite( const char * uuid, StationSrc_e src ) : const RadioStationInfo_t *
    + favs.addStation( const RadioStationInfo_t * rsi, StationSrc_e src ) : bool
    + favs.removeStation( const RadioStationInfo_t * rsi, StationSrc_e src ) : bool
    - - - -
    <b>Application configuration</b>
    - - - -
    + cfg.loadCfg)( void ) : bool
    + cfg.isLoaded( void ) : bool
    + cfg.writeCfg( void ) : bool
    + cfg.getVolume( void ) : int
    + cfg.setVolume( int ) : int
    + cfg.modVolume( int ) : int
    + cfg.getLastPlayedUUID( void ) : const char *
    + cfg.getLastPlayedSrc( void ) : StationSrc_e
    + cfg.setLastPlayedStation( const char *, StationSrc_e ) : void
    + cfg.playbackLogOverwrite( void ) : bool
    + cfg.getStreamTimeoutVal( void ) : int
    + cfg.getNetworkTimeoutVal( void ) : int
    + cfg.getUIConfig( void ) : UIConfig_t
    + cfg.setUIConfig( const UIConfig_t * cfg ) : bool
}

@enduml

PlantUML version 1.2021.7(Sun May 23 14:40:07 CEST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: Dynamic Code Evolution 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>